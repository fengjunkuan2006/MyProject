// Pull the plugin from a Maven Repo
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.eriwen:gradle-js-plugin:1.11.0'
        classpath 'com.eriwen:gradle-css-plugin:1.11.0'
    }
}

plugins {
    id 'org.hidetake.ssh' version '1.1.4'
}

group 'MyProject'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

dependencies {
    compile(
            //Spring
            "org.springframework:spring-core:4.1.6.RELEASE",
            "org.springframework:spring-web:4.1.6.RELEASE",
            "org.springframework:spring-tx:4.1.6.RELEASE",
            "org.springframework:spring-webmvc:4.1.6.RELEASE",
            "org.springframework:spring-aop:4.1.6.RELEASE",
            "org.springframework:spring-context-support:4.1.6.RELEASE",
            "org.springframework:spring-beans:4.1.6.RELEASE",
            "org.springframework:spring-test:4.1.6.RELEASE",

            //Logback
            "ch.qos.logback:logback-classic:1.1.3",
            "org.logback-extensions:logback-ext-spring:0.1.2",

            //Servlet
            "javax.servlet:javax.servlet-api:3.0.1",

            //Jackson
            "com.fasterxml.jackson.core:jackson-core:2.1.0",
            "com.fasterxml.jackson.core:jackson-databind:2.1.0",
            "com.fasterxml.jackson.core:jackson-annotations:2.1.0",

            //MyBatis
            "org.mybatis:mybatis:3.2.8",
            "org.mybatis:mybatis-spring:1.2.2",

            //MySQL
            "mysql:mysql-connector-java:5.1.36",

            //ODBC
            "org.springframework:spring-jdbc:4.1.6.RELEASE",

            //Test
            "junit:junit:4.11",

            //File Upload
            "commons-fileupload:commons-fileupload:1.3.1",

            //Spring Session
            "org.springframework.session:spring-session-data-redis:1.0.2.RELEASE",

            //Spring Data Mongodb
            "org.springframework.data:spring-data-mongodb:1.8.1.RELEASE",
    )
    runtime("jstl:jstl:1.2")

}

// Copy jars
task copyJars(type: Copy) {
    from configurations.runtime
    into 'lib' // Target Location
}

// Test
test {
    include '**/*Test.class'
    println System.properties['config.path']
}

// Declare root & destination dir
ext {
    baseDir = '/src/main/webapp/staticmedia'
    destDir = baseDir + '/compressed'
}

// Include other gradle files
apply from: 'gradle/build-js.gradle'
apply from: 'gradle/build-css.gradle'
apply from: 'gradle/build-server.gradle'


task taskX << {
    FileCollection collection = files('gradle/build-js.gradle', new File('gradle/build-css.gradle'), ['gradle/build-server.gradle'])
    collection.each {File file ->
        println file.name
    }
    collection = collection - file('gradle/build-server.gradle')
    collection.each {File file ->
        println file.name
    }
}
